{"ast":null,"code":"import _toConsumableArray from \"D:\\\\react-way-of-samurai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"D:\\\\react-way-of-samurai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { profileAPI } from \"../api/api\";\nvar ADD_POST = \"ADD-POST\";\nvar SET_USER_PROFILE = \"SET-USER-PROFILE\";\nvar SET_STATUS = \"SET-STATUS\";\nvar DELETE_POST = \"DELETE-POST\";\nvar initialState = {\n  posts: [{\n    id: 1,\n    post: 'hi, how are you',\n    likesCount: 1\n  }, {\n    id: 2,\n    post: 'It`s my first post',\n    likesCount: 2\n  }],\n  profile: null,\n  status: \"\"\n};\nexport var profileReducer = function profileReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      {\n        var newPost = {\n          id: 3,\n          post: action.text,\n          likesCount: 0\n        };\n\n        var stateCopy = _objectSpread({}, state);\n\n        stateCopy.posts = _toConsumableArray(state.posts);\n        stateCopy.posts.push(newPost);\n        return stateCopy;\n      }\n\n    case DELETE_POST:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          posts: state.posts.filter(function (p) {\n            return p.id != action.postId;\n          })\n        });\n      }\n\n    case SET_USER_PROFILE:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          profile: action.profile\n        });\n      }\n\n    case SET_STATUS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          status: action.status\n        });\n      }\n\n    default:\n      return state;\n  }\n\n  return state;\n};\nexport var addPostActionCreator = function addPostActionCreator(text) {\n  return {\n    type: ADD_POST,\n    text\n  };\n};\nexport var deletePost = function deletePost(postId) {\n  return {\n    type: DELETE_POST,\n    postId\n  };\n};\nexport var setStatus = function setStatus(status) {\n  return {\n    type: SET_STATUS,\n    status: status\n  };\n};\n\nvar setUserProfile = function setUserProfile(profile) {\n  return {\n    type: SET_USER_PROFILE,\n    profile\n  };\n};\n\nexport var getUserProfile = function getUserProfile(userId) {\n  return function (dispatch) {\n    profileAPI.getUser(userId).then(function (data) {\n      dispatch(setUserProfile(data));\n    });\n  };\n};\nexport var getStatus = function getStatus(userId) {\n  return function (dispatch) {\n    profileAPI.getStatus(userId).then(function (data) {\n      if (data == null || data == \"\") dispatch(setStatus('Шалом'));else dispatch(setStatus(data));\n    });\n  };\n};\nexport var updateStatus = function updateStatus(status) {\n  return function (dispatch) {\n    profileAPI.updateStatus(status).then(function (data) {\n      if (data.resultCode == 0) {\n        dispatch(setStatus(status));\n      }\n    });\n  };\n};","map":{"version":3,"sources":["D:/react-way-of-samurai/src/redux/profileReducer.js"],"names":["profileAPI","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","initialState","posts","id","post","likesCount","profile","status","profileReducer","state","action","type","newPost","text","stateCopy","push","filter","p","postId","addPostActionCreator","deletePost","setStatus","setUserProfile","getUserProfile","userId","dispatch","getUser","then","data","getStatus","updateStatus","resultCode"],"mappings":";;AAAA,SAAQA,UAAR,QAAyB,YAAzB;AAEA,IAAMC,QAAQ,GAAG,UAAjB;AACA,IAAMC,gBAAgB,GAAG,kBAAzB;AACA,IAAMC,UAAU,GAAG,YAAnB;AACA,IAAMC,WAAW,GAAG,aAApB;AAEA,IAAIC,YAAY,GAAE;AACdC,EAAAA,KAAK,EAAE,CACH;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE,iBAAd;AAAiCC,IAAAA,UAAU,EAAE;AAA7C,GADG,EAEH;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE,oBAAd;AAAoCC,IAAAA,UAAU,EAAE;AAAhD,GAFG,CADO;AAKdC,EAAAA,OAAO,EAAE,IALK;AAMdC,EAAAA,MAAM,EAAC;AANO,CAAlB;AASA,OAAO,IAAMC,cAAc,GAAC,SAAfA,cAAe,GAA8B;AAAA,MAA7BC,KAA6B,uEAAvBR,YAAuB;AAAA,MAATS,MAAS;;AACtD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKd,QAAL;AAAc;AACV,YAAIe,OAAO,GAAG;AACVT,UAAAA,EAAE,EAAE,CADM;AAEVC,UAAAA,IAAI,EAAEM,MAAM,CAACG,IAFH;AAGVR,UAAAA,UAAU,EAAE;AAHF,SAAd;;AAKA,YAAIS,SAAS,qBAAKL,KAAL,CAAb;;AACAK,QAAAA,SAAS,CAACZ,KAAV,sBAAoBO,KAAK,CAACP,KAA1B;AACAY,QAAAA,SAAS,CAACZ,KAAV,CAAgBa,IAAhB,CAAqBH,OAArB;AACA,eAAOE,SAAP;AACH;;AACD,SAAKd,WAAL;AAAiB;AACb,+CAAWS,KAAX;AAAkBP,UAAAA,KAAK,EAAEO,KAAK,CAACP,KAAN,CAAYc,MAAZ,CAAmB,UAAAC,CAAC;AAAA,mBAAEA,CAAC,CAACd,EAAF,IAAMO,MAAM,CAACQ,MAAf;AAAA,WAApB;AAAzB;AACH;;AACD,SAAKpB,gBAAL;AAAsB;AAClB,+CAAUW,KAAV;AAAiBH,UAAAA,OAAO,EAAEI,MAAM,CAACJ;AAAjC;AACH;;AACD,SAAKP,UAAL;AAAgB;AACZ,+CAAUU,KAAV;AAAiBF,UAAAA,MAAM,EAACG,MAAM,CAACH;AAA/B;AACH;;AACD;AAAS,aAAOE,KAAP;AArBb;;AAuBA,SAAOA,KAAP;AACH,CAzBM;AA0BP,OAAO,IAAMU,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACN,IAAD,EAAU;AAC1C,SAAO;AACHF,IAAAA,IAAI,EAAEd,QADH;AAEHgB,IAAAA;AAFG,GAAP;AAIH,CALM;AAMP,OAAO,IAAMO,UAAU,GAAG,SAAbA,UAAa,CAACF,MAAD,EAAY;AAClC,SAAO;AAACP,IAAAA,IAAI,EAAEX,WAAP;AAAmBkB,IAAAA;AAAnB,GAAP;AACH,CAFM;AAGP,OAAO,IAAMG,SAAS,GAAG,SAAZA,SAAY,CAACd,MAAD,EAAY;AACjC,SAAO;AACHI,IAAAA,IAAI,EAAEZ,UADH;AAEHQ,IAAAA,MAAM,EAAEA;AAFL,GAAP;AAIH,CALM;;AAMP,IAAMe,cAAc,GAAG,SAAjBA,cAAiB,CAAChB,OAAD,EAAa;AAAC,SAAO;AAACK,IAAAA,IAAI,EAAEb,gBAAP;AAAyBQ,IAAAA;AAAzB,GAAP;AAAyC,CAA9E;;AACA,OAAO,IAAMiB,cAAc,GAAC,SAAfA,cAAe,CAACC,MAAD;AAAA,SAAW,UAACC,QAAD,EAAY;AAC/C7B,IAAAA,UAAU,CAAC8B,OAAX,CAAmBF,MAAnB,EAA2BG,IAA3B,CAAgC,UAAAC,IAAI,EAAI;AACpCH,MAAAA,QAAQ,CAACH,cAAc,CAACM,IAAD,CAAf,CAAR;AACH,KAFD;AAGH,GAJ2B;AAAA,CAArB;AAKP,OAAO,IAAMC,SAAS,GAAC,SAAVA,SAAU,CAACL,MAAD;AAAA,SAAU,UAACC,QAAD,EAAY;AACzC7B,IAAAA,UAAU,CAACiC,SAAX,CAAqBL,MAArB,EAA6BG,IAA7B,CAAkC,UAAAC,IAAI,EAAI;AACtC,UAAIA,IAAI,IAAE,IAAN,IAAaA,IAAI,IAAE,EAAvB,EAA2BH,QAAQ,CAACJ,SAAS,CAAC,OAAD,CAAV,CAAR,CAA3B,KACKI,QAAQ,CAACJ,SAAS,CAACO,IAAD,CAAV,CAAR;AACR,KAHD;AAIH,GALsB;AAAA,CAAhB;AAMP,OAAO,IAAME,YAAY,GAAC,SAAbA,YAAa,CAACvB,MAAD;AAAA,SAAU,UAACkB,QAAD,EAAY;AAC5C7B,IAAAA,UAAU,CAACkC,YAAX,CAAwBvB,MAAxB,EAAgCoB,IAAhC,CAAqC,UAAAC,IAAI,EAAI;AACzC,UAAGA,IAAI,CAACG,UAAL,IAAiB,CAApB,EAAuB;AACnBN,QAAAA,QAAQ,CAACJ,SAAS,CAACd,MAAD,CAAV,CAAR;AACH;AACJ,KAJD;AAKH,GANyB;AAAA,CAAnB","sourcesContent":["import {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst SET_USER_PROFILE = \"SET-USER-PROFILE\";\r\nconst SET_STATUS = \"SET-STATUS\";\r\nconst DELETE_POST = \"DELETE-POST\";\r\n\r\nlet initialState= {\r\n    posts: [\r\n        {id: 1, post: 'hi, how are you', likesCount: 1},\r\n        {id: 2, post: 'It`s my first post', likesCount: 2},\r\n    ],\r\n    profile: null,\r\n    status:\"\",\r\n};\r\n\r\nexport const profileReducer=(state=initialState, action)=>{\r\n    switch (action.type) {\r\n        case ADD_POST:{\r\n            let newPost = {\r\n                id: 3,\r\n                post: action.text,\r\n                likesCount: 0,\r\n            }\r\n            let stateCopy={...state};\r\n            stateCopy.posts=[...state.posts];\r\n            stateCopy.posts.push(newPost);\r\n            return stateCopy;\r\n        }\r\n        case DELETE_POST:{\r\n            return {...state, posts: state.posts.filter(p=>p.id!=action.postId)}\r\n        }\r\n        case SET_USER_PROFILE:{\r\n            return{...state, profile: action.profile}\r\n        }\r\n        case SET_STATUS:{\r\n            return{...state, status:action.status}\r\n        }\r\n        default: return state;\r\n    }\r\n    return state;\r\n}\r\nexport const addPostActionCreator = (text) => {\r\n    return {\r\n        type: ADD_POST,\r\n        text,\r\n    }\r\n};\r\nexport const deletePost = (postId) => {\r\n    return {type: DELETE_POST,postId}\r\n};\r\nexport const setStatus = (status) => {\r\n    return {\r\n        type: SET_STATUS,\r\n        status: status,\r\n    }\r\n};\r\nconst setUserProfile = (profile) => {return {type: SET_USER_PROFILE, profile}};\r\nexport const getUserProfile=(userId)=> (dispatch)=>{\r\n    profileAPI.getUser(userId).then(data => {\r\n        dispatch(setUserProfile(data));\r\n    });\r\n}\r\nexport const getStatus=(userId)=>(dispatch)=>{\r\n    profileAPI.getStatus(userId).then(data => {\r\n        if (data==null|| data==\"\") dispatch(setStatus('Шалом'));\r\n        else dispatch(setStatus(data));\r\n    });\r\n}\r\nexport const updateStatus=(status)=>(dispatch)=>{\r\n    profileAPI.updateStatus(status).then(data => {\r\n        if(data.resultCode==0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n    });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}