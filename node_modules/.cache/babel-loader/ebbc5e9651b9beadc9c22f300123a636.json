{"ast":null,"code":"import _objectSpread from \"D:\\\\react-way-of-samurai\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { authAPI, profileAPI } from \"../api/api\";\nvar SET_USER_DATA = \"SET-USER-DATA\";\nvar SET_USER_SMALL_PHOTO = \"SET-USER-SMALL-PHOTO\";\nvar initialState = {\n  id: null,\n  email: null,\n  login: null,\n  isAuth: false,\n  smallPhoto: null\n};\nexport var authReducer = function authReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_USER_DATA:\n      return _objectSpread({}, state, action.data, {\n        isAuth: true\n      });\n\n    case SET_USER_SMALL_PHOTO:\n      return _objectSpread({}, state, {\n        smallPhoto: action.smallPhoto\n      });\n\n    default:\n      return state;\n  }\n};\nexport var setAuthUserData = function setAuthUserData(userId, email, login) {\n  return {\n    type: SET_USER_DATA,\n    data: {\n      userId: userId,\n      email: email,\n      login: login\n    }\n  };\n};\nexport var setUserSmallPhoto = function setUserSmallPhoto(smallPhoto) {\n  return {\n    type: SET_USER_SMALL_PHOTO,\n    smallPhoto: smallPhoto\n  };\n};\nexport var authMe = function authMe() {\n  debugger;\n  return function (dispatch) {\n    authAPI.authMe().then(function (data) {\n      if (data.resultCode == 0) {\n        var _data$data = data.data,\n            id = _data$data.id,\n            login = _data$data.login,\n            email = _data$data.email;\n        dispatch(setAuthUserData(id, email, login));\n      }\n\n      debugger;\n    }).then(function (response) {\n      profileAPI.getUser(12090).then(function (data) {\n        dispatch(setUserSmallPhoto(data.photos.small));\n      });\n    });\n  };\n};","map":{"version":3,"sources":["D:\\react-way-of-samurai\\src\\redux\\authReducer.js"],"names":["authAPI","profileAPI","SET_USER_DATA","SET_USER_SMALL_PHOTO","initialState","id","email","login","isAuth","smallPhoto","authReducer","state","action","type","data","setAuthUserData","userId","setUserSmallPhoto","authMe","dispatch","then","resultCode","response","getUser","photos","small"],"mappings":";AAAA,SAAQA,OAAR,EAAiBC,UAAjB,QAAkC,YAAlC;AAEA,IAAMC,aAAa,GAAG,eAAtB;AACA,IAAMC,oBAAoB,GAAG,sBAA7B;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,EAAE,EAAE,IADW;AAEfC,EAAAA,KAAK,EAAE,IAFQ;AAGfC,EAAAA,KAAK,EAAE,IAHQ;AAIfC,EAAAA,MAAM,EAAE,KAJO;AAKfC,EAAAA,UAAU,EAAE;AALG,CAAnB;AAQA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBP,YAAyB;AAAA,MAAXQ,MAAW;;AACzD,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKX,aAAL;AACI,+BACOS,KADP,EAEOC,MAAM,CAACE,IAFd;AAGIN,QAAAA,MAAM,EAAE;AAHZ;;AAKJ,SAAKL,oBAAL;AACI,+BACOQ,KADP;AAEIF,QAAAA,UAAU,EAAEG,MAAM,CAACH;AAFvB;;AAIJ;AACI,aAAOE,KAAP;AAdR;AAgBH,CAjBM;AAoBP,OAAO,IAAMI,eAAe,GAAG,SAAlBA,eAAkB,CAACC,MAAD,EAASV,KAAT,EAAgBC,KAAhB,EAA0B;AAAC,SAAO;AAACM,IAAAA,IAAI,EAAEX,aAAP;AAAsBY,IAAAA,IAAI,EAAC;AAACE,MAAAA,MAAM,EAANA,MAAD;AAASV,MAAAA,KAAK,EAALA,KAAT;AAAgBC,MAAAA,KAAK,EAALA;AAAhB;AAA3B,GAAP;AAA0D,CAA7G;AACP,OAAO,IAAMU,iBAAiB,GAAC,SAAlBA,iBAAkB,CAACR,UAAD,EAAc;AAAC,SAAM;AAACI,IAAAA,IAAI,EAACV,oBAAN;AAA2BM,IAAAA,UAAU,EAAVA;AAA3B,GAAN;AAA6C,CAApF;AACP,OAAO,IAAMS,MAAM,GAAC,SAAPA,MAAO,GAAI;AACpB;AACA,SAAO,UAACC,QAAD,EAAY;AACfnB,IAAAA,OAAO,CAACkB,MAAR,GAAiBE,IAAjB,CAAsB,UAAAN,IAAI,EAAI;AAC1B,UAAIA,IAAI,CAACO,UAAL,IAAmB,CAAvB,EAA0B;AAAA,yBACGP,IAAI,CAACA,IADR;AAAA,YACjBT,EADiB,cACjBA,EADiB;AAAA,YACbE,KADa,cACbA,KADa;AAAA,YACND,KADM,cACNA,KADM;AAEtBa,QAAAA,QAAQ,CAACJ,eAAe,CAACV,EAAD,EAAKC,KAAL,EAAYC,KAAZ,CAAhB,CAAR;AACH;;AACD;AACH,KAND,EAMGa,IANH,CAMQ,UAAAE,QAAQ,EAAI;AAChBrB,MAAAA,UAAU,CAACsB,OAAX,CAAmB,KAAnB,EAA0BH,IAA1B,CAA+B,UAAAN,IAAI,EAAI;AACnCK,QAAAA,QAAQ,CAACF,iBAAiB,CAACH,IAAI,CAACU,MAAL,CAAYC,KAAb,CAAlB,CAAR;AACH,OAFD;AAGH,KAVD;AAWH,GAZD;AAaH,CAfM","sourcesContent":["import {authAPI, profileAPI} from \"../api/api\";\r\n\r\nconst SET_USER_DATA = \"SET-USER-DATA\";\r\nconst SET_USER_SMALL_PHOTO = \"SET-USER-SMALL-PHOTO\";\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    smallPhoto: null\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true,\r\n            }\r\n        case SET_USER_SMALL_PHOTO:\r\n            return {\r\n                ...state,\r\n                smallPhoto: action.smallPhoto,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login) => {return {type: SET_USER_DATA, data:{userId, email, login}}};\r\nexport const setUserSmallPhoto=(smallPhoto)=>{return{type:SET_USER_SMALL_PHOTO,smallPhoto}};\r\nexport const authMe=()=>{\r\n    debugger\r\n    return (dispatch)=>{\r\n        authAPI.authMe().then(data => {\r\n            if (data.resultCode == 0) {\r\n                let {id, login, email} = data.data;\r\n                dispatch(setAuthUserData(id, email, login))\r\n            }\r\n            debugger\r\n        }).then(response => {\r\n            profileAPI.getUser(12090).then(data => {\r\n                dispatch(setUserSmallPhoto(data.photos.small));\r\n            })\r\n        });\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}