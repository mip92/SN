{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-way-of-samurai\\\\src\\\\components\\\\Dialogs\\\\DialogsContainer.jsx\";\nimport React from 'react';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport { addMessageActionCreator, updateNewMessageTextActionCreator } from \"../../redux/dialogsReducer\";\nimport Dialogs from \"./Dialogs\";\nimport StoreContext from \"../../StoreContext\";\nimport { connect } from \"react-redux\";\n\nvar DialogsContainer = function DialogsContainer(props) {\n  return React.createElement(StoreContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, function (store) {\n    var state = store.getState();\n\n    var addMessage = function addMessage() {\n      store.dispatch(addMessageActionCreator());\n    };\n\n    var onMessageChange = function onMessageChange(text) {\n      store.dispatch(updateNewMessageTextActionCreator(text));\n    };\n\n    return React.createElement(Dialogs, {\n      updateNewMessageText: onMessageChange\n      /*addDialog={addMessage}*/\n      ,\n      state: state.dialogsPage,\n      newMessageText: state.dialogsPage.newMessageText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    });\n  });\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: state.dialogsPage\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps() {\n  return {};\n};\n\nvar SuperDialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\nexport default DialogsContainer;","map":{"version":3,"sources":["D:\\react-way-of-samurai\\src\\components\\Dialogs\\DialogsContainer.jsx"],"names":["React","DialogItem","Message","addMessageActionCreator","updateNewMessageTextActionCreator","Dialogs","StoreContext","connect","DialogsContainer","props","store","state","getState","addMessage","dispatch","onMessageChange","text","dialogsPage","newMessageText","mapStateToProps","mapDispatchToProps","SuperDialogsContainer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,uBAAR,EAAiCC,iCAAjC,QAAyE,4BAAzE;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAGA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;AAChC,SACI,oBAAC,YAAD,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ,UAACC,KAAD,EAAW;AACP,QAAIC,KAAK,GAAGD,KAAK,CAACE,QAAN,EAAZ;;AAEA,QAAIC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACnBH,MAAAA,KAAK,CAACI,QAAN,CAAeX,uBAAuB,EAAtC;AACH,KAFD;;AAGA,QAAIY,eAAe,GAAG,SAAlBA,eAAkB,CAACC,IAAD,EAAU;AAC5BN,MAAAA,KAAK,CAACI,QAAN,CAAeV,iCAAiC,CAACY,IAAD,CAAhD;AACH,KAFD;;AAIA,WACI,oBAAC,OAAD;AAAS,MAAA,oBAAoB,EAAED;AACtB;AADT;AAES,MAAA,KAAK,EAAEJ,KAAK,CAACM,WAFtB;AAGS,MAAA,cAAc,EAAEN,KAAK,CAACM,WAAN,CAAkBC,cAH3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAOH,GAnBT,CADJ;AAwBH,CAzBD;;AA0BA,IAAIC,eAAe,GAAC,SAAhBA,eAAgB,CAACR,KAAD,EAAS;AACzB,SAAM;AACFA,IAAAA,KAAK,EAAEA,KAAK,CAACM;AADX,GAAN;AAGH,CAJD;;AAMA,IAAIG,kBAAkB,GAAC,SAAnBA,kBAAmB,GAAI;AACvB,SAAM,EAAN;AAGH,CAJD;;AAKA,IAAMC,qBAAqB,GAACd,OAAO,CAACY,eAAD,EAAkBC,kBAAlB,CAAP,CAA6Cf,OAA7C,CAA5B;AAEA,eAAeG,gBAAf","sourcesContent":["import React from 'react';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {addMessageActionCreator, updateNewMessageTextActionCreator} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport StoreContext from \"../../StoreContext\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst DialogsContainer = (props) => {\r\n    return (\r\n        <StoreContext.Consumer>\r\n            {\r\n                (store) => {\r\n                    let state = store.getState();\r\n\r\n                    let addMessage = () => {\r\n                        store.dispatch(addMessageActionCreator())\r\n                    };\r\n                    let onMessageChange = (text) => {\r\n                        store.dispatch(updateNewMessageTextActionCreator(text))\r\n                    };\r\n\r\n                    return (\r\n                        <Dialogs updateNewMessageText={onMessageChange}\r\n                                 /*addDialog={addMessage}*/\r\n                                 state={state.dialogsPage}\r\n                                 newMessageText={state.dialogsPage.newMessageText}\r\n                        />\r\n                    )\r\n                }\r\n            }\r\n        </StoreContext.Consumer>\r\n    )\r\n}\r\nlet mapStateToProps=(state)=>{\r\n    return{\r\n        state: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps=()=>{\r\n    return{\r\n\r\n    }\r\n}\r\nconst SuperDialogsContainer=connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n\r\nexport default DialogsContainer;"]},"metadata":{},"sourceType":"module"}