{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\react-way-of-samurai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\react-way-of-samurai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"D:\\\\react-way-of-samurai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"D:\\\\react-way-of-samurai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { profileAPI } from \"../api/api\";\nvar ADD_POST = \"ADD-POST\";\nvar SET_USER_PROFILE = \"SET-USER-PROFILE\";\nvar SET_STATUS = \"SET-STATUS\";\nvar DELETE_POST = \"DELETE-POST\";\nvar initialState = {\n  posts: [{\n    id: 1,\n    post: 'hi, how are you',\n    likesCount: 1\n  }, {\n    id: 2,\n    post: 'It`s my first post',\n    likesCount: 2\n  }],\n  profile: null,\n  status: \"\"\n};\nexport var profileReducer = function profileReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      {\n        var newPost = {\n          id: 3,\n          post: action.text,\n          likesCount: 0\n        };\n\n        var stateCopy = _objectSpread({}, state);\n\n        stateCopy.posts = _toConsumableArray(state.posts);\n        stateCopy.posts.push(newPost);\n        return stateCopy;\n      }\n\n    case DELETE_POST:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          posts: state.posts.filter(function (p) {\n            return p.id != action.postId;\n          })\n        });\n      }\n\n    case SET_USER_PROFILE:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          profile: action.profile\n        });\n      }\n\n    case SET_STATUS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          status: action.status\n        });\n      }\n\n    default:\n      return state;\n  }\n\n  return state;\n};\nexport var addPostActionCreator = function addPostActionCreator(text) {\n  return {\n    type: ADD_POST,\n    text\n  };\n};\nexport var deletePost = function deletePost(postId) {\n  return {\n    type: DELETE_POST,\n    postId\n  };\n};\nexport var setStatus = function setStatus(status) {\n  return {\n    type: SET_STATUS,\n    status: status\n  };\n};\n\nvar setUserProfile = function setUserProfile(profile) {\n  return {\n    type: SET_USER_PROFILE,\n    profile\n  };\n};\n\nexport var getUserProfile = function getUserProfile(userId) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return profileAPI.getUser(userId);\n\n            case 2:\n              data = _context.sent;\n              dispatch(setUserProfile(data));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var getStatus = function getStatus(userId) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return profileAPI.getStatus(userId);\n\n            case 2:\n              data = _context2.sent;\n              if (data == null || data == \"\") dispatch(setStatus('Шалом'));else dispatch(setStatus(data));\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var updateStatus = function updateStatus(status) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return profileAPI.updateStatus(status);\n\n            case 2:\n              data = _context3.sent;\n\n              if (data.resultCode == 0) {\n                dispatch(setStatus(status));\n              }\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["D:/react-way-of-samurai/src/redux/profileReducer.js"],"names":["profileAPI","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","initialState","posts","id","post","likesCount","profile","status","profileReducer","state","action","type","newPost","text","stateCopy","push","filter","p","postId","addPostActionCreator","deletePost","setStatus","setUserProfile","getUserProfile","userId","dispatch","getUser","data","getStatus","updateStatus","resultCode"],"mappings":"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","sourcesContent":["import {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst SET_USER_PROFILE = \"SET-USER-PROFILE\";\r\nconst SET_STATUS = \"SET-STATUS\";\r\nconst DELETE_POST = \"DELETE-POST\";\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, post: 'hi, how are you', likesCount: 1},\r\n        {id: 2, post: 'It`s my first post', likesCount: 2},\r\n    ],\r\n    profile: null,\r\n    status: \"\",\r\n};\r\n\r\nexport const profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 3,\r\n                post: action.text,\r\n                likesCount: 0,\r\n            }\r\n            let stateCopy = {...state};\r\n            stateCopy.posts = [...state.posts];\r\n            stateCopy.posts.push(newPost);\r\n            return stateCopy;\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n    return state;\r\n}\r\nexport const addPostActionCreator = (text) => {\r\n    return {\r\n        type: ADD_POST,\r\n        text,\r\n    }\r\n};\r\nexport const deletePost = (postId) => {\r\n    return {type: DELETE_POST, postId}\r\n};\r\nexport const setStatus = (status) => {\r\n    return {\r\n        type: SET_STATUS,\r\n        status: status,\r\n    }\r\n};\r\nconst setUserProfile = (profile) => {\r\n    return {type: SET_USER_PROFILE, profile}\r\n};\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let data = await profileAPI.getUser(userId)\r\n    dispatch(setUserProfile(data));\r\n}\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let data = await profileAPI.getStatus(userId)\r\n    if (data == null || data == \"\") dispatch(setStatus('Шалом'));\r\n    else dispatch(setStatus(data));\r\n}\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let data = await profileAPI.updateStatus(status)\r\n    if (data.resultCode == 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}