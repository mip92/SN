{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-way-of-samurai\\\\src\\\\components\\\\Users\\\\UsersContainer.tsx\";\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport Preloader from '../common/Preloader/Preloader';\nimport { getIsFetching } from '../../redux/users-selectors';\nimport { Users } from './Users';\nexport const UsersPage = props => {\n  const isFetching = useSelector(getIsFetching);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, props.pageTitle), isFetching ? /*#__PURE__*/React.createElement(Preloader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 23\n    }\n  }) : null, /*#__PURE__*/React.createElement(Users, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }));\n};","map":{"version":3,"sources":["D:/react-way-of-samurai/src/components/Users/UsersContainer.tsx"],"names":["React","useSelector","Preloader","getIsFetching","Users","UsersPage","props","isFetching","pageTitle"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,SAAQC,aAAR,QAA4B,6BAA5B;AACA,SAAQC,KAAR,QAAoB,SAApB;AAMA,OAAO,MAAMC,SAAuC,GAAIC,KAAD,IAAW;AAC9D,QAAMC,UAAU,GAAGN,WAAW,CAACE,aAAD,CAA9B;AACA,sBAAO,uDACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKG,KAAK,CAACE,SAAX,CADG,EAEFD,UAAU,gBAAG,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAkB,IAF1B,eAGH,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHG,CAAP;AAKH,CAPM","sourcesContent":["import React from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport Preloader from '../common/Preloader/Preloader'\r\nimport {getIsFetching} from '../../redux/users-selectors'\r\nimport {Users} from './Users'\r\n\r\ntype UsersPagePropsType = {\r\n    pageTitle: string\r\n}\r\n\r\nexport const UsersPage: React.FC<UsersPagePropsType> = (props) => {\r\n    const isFetching = useSelector(getIsFetching)\r\n    return <>\r\n        <h2>{props.pageTitle}</h2>\r\n        {isFetching ? <Preloader/> : null}\r\n        <Users />\r\n    </>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}