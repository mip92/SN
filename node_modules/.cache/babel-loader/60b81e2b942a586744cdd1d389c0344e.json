{"ast":null,"code":"import _objectSpread from \"D:\\\\socialNetwork\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { authMe, setAuthUserData, setUserSmallPhoto } from \"./authReducer\";\nimport { authAPI, profileAPI } from \"../api/api\";\nvar INITIALIZED_SUCCESS = \"INITIALIZED-SUCCESS\";\nvar initialState = {\n  initialized: false\n};\nexport var appReducer = function appReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case INITIALIZED_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        initialized: true\n      });\n\n    default:\n      return state;\n  }\n};\nexport var initializedSuccess = function initializedSuccess() {\n  return {\n    type: INITIALIZED_SUCCESS\n  };\n};\nexport var initializeApp = function initializeApp() {\n  return function (dispatch) {\n    var id;\n    var login;\n    var email;\n    authAPI.authMe().then(function (data) {\n      if (data.resultCode == 0) {\n        id = data.data.id;\n        login = data.data.login;\n        email = data.data.email;\n        dispatch(setAuthUserData(id, email, login, true));\n      }\n    }).then(function (response) {\n      profileAPI.getUser(id).then(function (data) {\n        dispatch(setUserSmallPhoto(data.photos.small));\n      });\n    }).then(function (response) {\n      dispatch(initializedSuccess());\n    });\n  };\n};","map":{"version":3,"sources":["D:/socialNetwork/src/redux/appReducer.js"],"names":["authMe","setAuthUserData","setUserSmallPhoto","authAPI","profileAPI","INITIALIZED_SUCCESS","initialState","initialized","appReducer","state","action","type","initializedSuccess","initializeApp","dispatch","id","login","email","then","data","resultCode","response","getUser","photos","small"],"mappings":";AACA,SAAQA,MAAR,EAAgBC,eAAhB,EAAiCC,iBAAjC,QAAyD,eAAzD;AACA,SAAQC,OAAR,EAAiBC,UAAjB,QAAkC,YAAlC;AAEA,IAAMC,mBAAmB,GAAE,qBAA3B;AAGA,IAAIC,YAAY,GAAG;AACfC,EAAAA,WAAW,EAAE;AADE,CAAnB;AAIA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AACxD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,mBAAL;AACI,6CACOI,KADP;AAEIF,QAAAA,WAAW,EAAE;AAFjB;;AAIJ;AACI,aAAOE,KAAP;AAPR;AASH,CAVM;AAaP,OAAO,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AACpC,SAAO;AAACD,IAAAA,IAAI,EAAEN;AAAP,GAAP;AACH,CAFM;AAGP,OAAO,IAAMQ,aAAa,GAAG,SAAhBA,aAAgB;AAAA,SAAM,UAACC,QAAD,EAAc;AAC7C,QAAIC,EAAJ;AACA,QAAIC,KAAJ;AACA,QAAIC,KAAJ;AACAd,IAAAA,OAAO,CAACH,MAAR,GAAiBkB,IAAjB,CAAsB,UAAAC,IAAI,EAAI;AAC1B,UAAIA,IAAI,CAACC,UAAL,IAAmB,CAAvB,EAA0B;AACtBL,QAAAA,EAAE,GAAGI,IAAI,CAACA,IAAL,CAAUJ,EAAf;AACAC,QAAAA,KAAK,GAAGG,IAAI,CAACA,IAAL,CAAUH,KAAlB;AACAC,QAAAA,KAAK,GAAGE,IAAI,CAACA,IAAL,CAAUF,KAAlB;AACAH,QAAAA,QAAQ,CAACb,eAAe,CAACc,EAAD,EAAKE,KAAL,EAAYD,KAAZ,EAAmB,IAAnB,CAAhB,CAAR;AACH;AACJ,KAPD,EAOGE,IAPH,CAOQ,UAAAG,QAAQ,EAAI;AAChBjB,MAAAA,UAAU,CAACkB,OAAX,CAAmBP,EAAnB,EAAuBG,IAAvB,CAA4B,UAAAC,IAAI,EAAI;AAChCL,QAAAA,QAAQ,CAACZ,iBAAiB,CAACiB,IAAI,CAACI,MAAL,CAAYC,KAAb,CAAlB,CAAR;AACH,OAFD;AAGH,KAXD,EAWGN,IAXH,CAWQ,UAAAG,QAAQ,EAAE;AACVP,MAAAA,QAAQ,CAACF,kBAAkB,EAAnB,CAAR;AACH,KAbL;AAcH,GAlB4B;AAAA,CAAtB","sourcesContent":["\r\nimport {authMe, setAuthUserData, setUserSmallPhoto} from \"./authReducer\";\r\nimport {authAPI, profileAPI} from \"../api/api\";\r\n\r\nconst INITIALIZED_SUCCESS= \"INITIALIZED-SUCCESS\";\r\n\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n};\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const initializedSuccess = () => {\r\n    return {type: INITIALIZED_SUCCESS}\r\n};\r\nexport const initializeApp = () => (dispatch) => {\r\n    let id;\r\n    let login;\r\n    let email;\r\n    authAPI.authMe().then(data => {\r\n        if (data.resultCode == 0) {\r\n            id = data.data.id;\r\n            login = data.data.login;\r\n            email = data.data.email;\r\n            dispatch(setAuthUserData(id, email, login, true));\r\n        }\r\n    }).then(response => {\r\n        profileAPI.getUser(id).then(data => {\r\n            dispatch(setUserSmallPhoto(data.photos.small));\r\n        })\r\n    }).then(response=>{\r\n            dispatch(initializedSuccess());\r\n        });\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}