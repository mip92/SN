{"ast":null,"code":"import * as axios from \"axios\";\nvar instance = axios.create({\n  withCredentials: true,\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\n  headers: {\n    \"API-KEY\": \"aec09892-749d-4c42-b208-544b7f308b49\"\n  }\n});\nexport var userAPI = {\n  getUsers() {\n    var currentPage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var pageSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n    return instance.get(\"users?page=\".concat(currentPage, \"&count=\").concat(pageSize)).then(function (response) {\n      return response.data;\n    });\n  }\n\n};\nexport var followAPI = {\n  deleteUser(id) {\n    return instance.delete(\"follow/\".concat(id)).then(function (response) {\n      return response.data;\n    });\n  },\n\n  postUser(id) {\n    return instance.post(\"follow/\".concat(id)).then(function (response) {\n      return response.data;\n    });\n  }\n\n};\nexport var authAPI = {\n  authMe() {\n    return instance.get(\"auth/me\").then(function (response) {\n      return response.data;\n    });\n  },\n\n  login(email, password) {\n    var rememberMe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    return instance.post(\"auth/login\", {\n      email,\n      password,\n      rememberMe\n    }).then(function (response) {\n      return response.data;\n    });\n  },\n\n  logout() {\n    return instance.delete(\"auth/login\").then(function (response) {\n      return response.data;\n    });\n  }\n\n};\nexport var profileAPI = {\n  getUser(userId) {\n    return instance.get(\"profile/\" + userId).then(function (response) {\n      return response.data;\n    });\n  },\n\n  getStatus(userId) {\n    return instance.get(\"profile/status/\".concat(userId)).then(function (response) {\n      return response.data;\n    });\n  },\n\n  updateStatus(status) {\n    return instance.put(\"profile/status/\", {\n      status: status\n    }).then(function (response) {\n      return response.data;\n    });\n  }\n\n};","map":{"version":3,"sources":["D:/react-way-of-samurai/src/api/api.js"],"names":["axios","instance","create","withCredentials","baseURL","headers","userAPI","getUsers","currentPage","pageSize","get","then","response","data","followAPI","deleteUser","id","delete","postUser","post","authAPI","authMe","login","email","password","rememberMe","logout","profileAPI","getUser","userId","getStatus","updateStatus","status","put"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,IAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC1BC,EAAAA,eAAe,EAAE,IADS;AAE1BC,EAAAA,OAAO,EAAE,+CAFiB;AAG1BC,EAAAA,OAAO,EAAE;AACL,eAAW;AADN;AAHiB,CAAb,CAAjB;AAOA,OAAO,IAAMC,OAAO,GAAG;AACnBC,EAAAA,QAAQ,GAAiC;AAAA,QAAhCC,WAAgC,uEAAlB,CAAkB;AAAA,QAAfC,QAAe,uEAAJ,EAAI;AACrC,WAAOR,QAAQ,CAACS,GAAT,sBAA2BF,WAA3B,oBAAgDC,QAAhD,GACFE,IADE,CACG,UAAAC,QAAQ,EAAI;AACd,aAAOA,QAAQ,CAACC,IAAhB;AACH,KAHE,CAAP;AAIH;;AANkB,CAAhB;AAQP,OAAO,IAAMC,SAAS,GAAG;AACrBC,EAAAA,UAAU,CAACC,EAAD,EAAK;AACX,WAAOf,QAAQ,CAACgB,MAAT,kBAA0BD,EAA1B,GACFL,IADE,CACG,UAAAC,QAAQ,EAAI;AACd,aAAOA,QAAQ,CAACC,IAAhB;AACH,KAHE,CAAP;AAIH,GANoB;;AAOrBK,EAAAA,QAAQ,CAACF,EAAD,EAAK;AACT,WAAOf,QAAQ,CAACkB,IAAT,kBAAwBH,EAAxB,GACFL,IADE,CACG,UAAAC,QAAQ,EAAI;AACd,aAAOA,QAAQ,CAACC,IAAhB;AACH,KAHE,CAAP;AAIH;;AAZoB,CAAlB;AAeP,OAAO,IAAMO,OAAO,GAAG;AACnBC,EAAAA,MAAM,GAAG;AACL,WAAOpB,QAAQ,CAACS,GAAT,YACFC,IADE,CACG,UAAAC,QAAQ,EAAI;AACd,aAAOA,QAAQ,CAACC,IAAhB;AACH,KAHE,CAAP;AAIH,GANkB;;AAOnBS,EAAAA,KAAK,CAACC,KAAD,EAAQC,QAAR,EAAmC;AAAA,QAAjBC,UAAiB,uEAAN,KAAM;AACpC,WAAOxB,QAAQ,CAACkB,IAAT,eAA4B;AAACI,MAAAA,KAAD;AAAQC,MAAAA,QAAR;AAAkBC,MAAAA;AAAlB,KAA5B,EACFd,IADE,CACG,UAAAC,QAAQ,EAAE;AACZ,aAAOA,QAAQ,CAACC,IAAhB;AACH,KAHE,CAAP;AAIH,GAZkB;;AAanBa,EAAAA,MAAM,GAAE;AACJ,WAAOzB,QAAQ,CAACgB,MAAT,eACFN,IADE,CACG,UAAAC,QAAQ,EAAE;AACZ,aAAOA,QAAQ,CAACC,IAAhB;AACH,KAHE,CAAP;AAIH;;AAlBkB,CAAhB;AAoBP,OAAO,IAAMc,UAAU,GAAG;AACtBC,EAAAA,OAAO,CAACC,MAAD,EAAS;AACZ,WAAO5B,QAAQ,CAACS,GAAT,CAAa,aAAWmB,MAAxB,EACFlB,IADE,CACG,UAAAC,QAAQ,EAAI;AACd,aAAOA,QAAQ,CAACC,IAAhB;AACH,KAHE,CAAP;AAIH,GANqB;;AAOtBiB,EAAAA,SAAS,CAACD,MAAD,EAAS;AAEd,WAAO5B,QAAQ,CAACS,GAAT,0BAA+BmB,MAA/B,GACFlB,IADE,CACG,UAAAC,QAAQ,EAAI;AACd,aAAOA,QAAQ,CAACC,IAAhB;AACH,KAHE,CAAP;AAIH,GAbqB;;AActBkB,EAAAA,YAAY,CAACC,MAAD,EAAS;AACjB,WAAO/B,QAAQ,CAACgC,GAAT,oBAA+B;AAACD,MAAAA,MAAM,EAAEA;AAAT,KAA/B,EACFrB,IADE,CACG,UAAAC,QAAQ,EAAI;AACd,aAAOA,QAAQ,CAACC,IAAhB;AACH,KAHE,CAAP;AAKH;;AApBqB,CAAnB","sourcesContent":["import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"aec09892-749d-4c42-b208-544b7f308b49\"\r\n    },\r\n});\r\nexport const userAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n    }\r\n}\r\nexport const followAPI = {\r\n    deleteUser(id) {\r\n        return instance.delete(`follow/${id}`)\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n    },\r\n    postUser(id) {\r\n        return instance.post(`follow/${id}`)\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n    },\r\n}\r\n\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance.get(`auth/me`)\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n    },\r\n    login(email, password, rememberMe=false){\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n            .then(response=>{\r\n                return response.data\r\n            });\r\n    },\r\n    logout(){\r\n        return instance.delete(`auth/login`)\r\n            .then(response=>{\r\n                return response.data\r\n            });\r\n    }\r\n}\r\nexport const profileAPI = {\r\n    getUser(userId) {\r\n        return instance.get(`profile/`+userId)\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n    },\r\n    getStatus(userId) {\r\n\r\n        return instance.get(`profile/status/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`,{status: status})\r\n            .then(response => {\r\n                return response.data\r\n            }\r\n            );\r\n    },\r\n\r\n}"]},"metadata":{},"sourceType":"module"}