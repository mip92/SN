{"ast":null,"code":"import _toConsumableArray from \"D:\\\\react-way-of-samurai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"D:\\\\react-way-of-samurai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { profileAPI } from \"../api/api\";\nvar ADD_POST = \"ADD-POST\";\nvar UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\nvar SET_USER_PROFILE = \"SET-USER-PROFILE\";\nvar SET_STATUS = \"SET-STATUS\";\nvar initialState = {\n  posts: [{\n    id: 1,\n    post: 'hi, how are you',\n    likesCount: 1\n  }, {\n    id: 2,\n    post: 'It`s my first post',\n    likesCount: 2\n  }],\n  newPostText: \"\",\n  profile: null,\n  status: \"\"\n};\nexport var profileReducer = function profileReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      {\n        var newPost = {\n          id: 3,\n          post: state.newPostText,\n          likesCount: 0\n        };\n\n        var stateCopy = _objectSpread({}, state);\n\n        stateCopy.posts = _toConsumableArray(state.posts);\n        stateCopy.posts.push(newPost);\n        stateCopy.newPostText = '';\n        return stateCopy;\n      }\n\n    case UPDATE_NEW_POST_TEXT:\n      {\n        var _stateCopy = _objectSpread({}, state);\n\n        _stateCopy.newPostText = action.newText;\n        return _stateCopy;\n      }\n\n    case SET_USER_PROFILE:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          profile: action.profile\n        });\n      }\n\n    case SET_STATUS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          status: action.status\n        });\n      }\n\n    default:\n      return state;\n  }\n\n  return state;\n};\nexport var addPostActionCreator = function addPostActionCreator() {\n  return {\n    type: ADD_POST\n  };\n};\nexport var updateNewPostTextActionCreator = function updateNewPostTextActionCreator(text) {\n  return {\n    type: UPDATE_NEW_POST_TEXT,\n    newText: text\n  };\n};\nexport var setStatus = function setStatus(status) {\n  return {\n    type: SET_STATUS,\n    status\n  };\n};\n\nvar setUserProfile = function setUserProfile(profile) {\n  return {\n    type: SET_USER_PROFILE,\n    profile\n  };\n};\n\nexport var getUserProfile = function getUserProfile(userId) {\n  return function (dispatch) {\n    profileAPI.getUser(userId).then(function (data) {\n      dispatch(setUserProfile(data));\n    });\n  };\n};","map":{"version":3,"sources":["D:/react-way-of-samurai/src/redux/profileReducer.js"],"names":["profileAPI","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","SET_STATUS","initialState","posts","id","post","likesCount","newPostText","profile","status","profileReducer","state","action","type","newPost","stateCopy","push","newText","addPostActionCreator","updateNewPostTextActionCreator","text","setStatus","setUserProfile","getUserProfile","userId","dispatch","getUser","then","data"],"mappings":"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","sourcesContent":["import {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\r\nconst SET_USER_PROFILE = \"SET-USER-PROFILE\";\r\nconst SET_STATUS = \"SET-STATUS\";\r\n\r\nlet initialState= {\r\n    posts: [\r\n        {id: 1, post: 'hi, how are you', likesCount: 1},\r\n        {id: 2, post: 'It`s my first post', likesCount: 2},\r\n    ],\r\n    newPostText: \"\",\r\n    profile: null,\r\n    status:\"\",\r\n};\r\n\r\nexport const profileReducer=(state=initialState, action)=>{\r\n    switch (action.type) {\r\n        case ADD_POST:{\r\n            let newPost = {\r\n                id: 3,\r\n                post: state.newPostText,\r\n                likesCount: 0,\r\n            }\r\n            let stateCopy={...state};\r\n            stateCopy.posts=[...state.posts];\r\n            stateCopy.posts.push(newPost);\r\n            stateCopy.newPostText = '';\r\n            return stateCopy;\r\n        }\r\n        case UPDATE_NEW_POST_TEXT:{\r\n            let stateCopy={...state};\r\n            stateCopy.newPostText = action.newText;\r\n            return stateCopy;\r\n        }\r\n        case SET_USER_PROFILE:{\r\n            return{...state, profile: action.profile}\r\n        }\r\n        case SET_STATUS:{\r\n            return{...state, status:action.status}\r\n        }\r\n        default: return state;\r\n    }\r\n    return state;\r\n}\r\nexport const addPostActionCreator = () => {\r\n    return {\r\n        type: ADD_POST\r\n    }\r\n};\r\nexport const updateNewPostTextActionCreator = (text) => {\r\n\r\n    return {\r\n        type: UPDATE_NEW_POST_TEXT,\r\n        newText: text\r\n    }\r\n};\r\nexport const setStatus = (status) => {\r\n\r\n    return {\r\n        type: SET_STATUS,\r\n        status\r\n    }\r\n};\r\nconst setUserProfile = (profile) => {return {type: SET_USER_PROFILE, profile}};\r\nexport const getUserProfile=(userId)=>(dispatch)=>{\r\n    profileAPI.getUser(userId).then(data => {\r\n        dispatch(setUserProfile(data));\r\n    });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}