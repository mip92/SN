{"ast":null,"code":"import { getAuthUserData } from \"./auth-reducer\";\nlet initialState = {\n  initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SN/APP/INITIALIZED_SUCCESS':\n      return { ...state,\n        initialized: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const actions = {\n  initializedSuccess: () => ({\n    type: 'SN/APP/INITIALIZED_SUCCESS'\n  })\n};\nexport const initializeApp = () => dispatch => {\n  let promise = dispatch(getAuthUserData());\n  Promise.all([promise]).then(() => {\n    dispatch(actions.initializedSuccess());\n  });\n};\nexport default appReducer;","map":{"version":3,"sources":["D:/react-way-of-samurai/src/redux/app-reducer.ts"],"names":["getAuthUserData","initialState","initialized","appReducer","state","action","type","actions","initializedSuccess","initializeApp","dispatch","promise","Promise","all","then"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,gBAA9B;AAGA,IAAIC,YAAY,GAAG;AACfC,EAAAA,WAAW,EAAE;AADE,CAAnB;;AAOA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAiE;AAChF,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,4BAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHF,QAAAA,WAAW,EAAE;AAFV,OAAP;;AAIJ;AACI,aAAOE,KAAP;AAPR;AASH,CAVD;;AAYA,OAAO,MAAMG,OAAO,GAAG;AACnBC,EAAAA,kBAAkB,EAAE,OAAO;AAACF,IAAAA,IAAI,EAAE;AAAP,GAAP;AADD,CAAhB;AAIP,OAAO,MAAMG,aAAa,GAAG,MAAOC,QAAD,IAAmB;AAClD,MAAIC,OAAO,GAAGD,QAAQ,CAACV,eAAe,EAAhB,CAAtB;AAEAY,EAAAA,OAAO,CAACC,GAAR,CAAY,CAACF,OAAD,CAAZ,EACKG,IADL,CACU,MAAM;AACRJ,IAAAA,QAAQ,CAACH,OAAO,CAACC,kBAAR,EAAD,CAAR;AACH,GAHL;AAIH,CAPM;AAUP,eAAeL,UAAf","sourcesContent":["import {getAuthUserData} from \"./auth-reducer\"\r\nimport {InferActionsTypes} from './redux-store';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nexport type InitialStateType = typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\nconst appReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SN/APP/INITIALIZED_SUCCESS':\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    initializedSuccess: () => ({type: 'SN/APP/INITIALIZED_SUCCESS'} as const)\r\n}\r\n\r\nexport const initializeApp = () => (dispatch: any) => {\r\n    let promise = dispatch(getAuthUserData());\r\n\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(actions.initializedSuccess());\r\n        });\r\n}\r\n\r\n\r\nexport default appReducer;\r\n"]},"metadata":{},"sourceType":"module"}