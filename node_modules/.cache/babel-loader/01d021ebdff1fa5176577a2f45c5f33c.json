{"ast":null,"code":"import _classCallCheck from \"D:\\\\react-way-of-samurai\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\react-way-of-samurai\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\react-way-of-samurai\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\react-way-of-samurai\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\react-way-of-samurai\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\react-way-of-samurai\\\\src\\\\components\\\\Users\\\\UsersContainer.jsx\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { follow, setUsers, unFollow, setCurrentPage, setTotalUsersCount, onNumberChange, searchNumber, toggleIsFetching } from \"../../redux/usersReducer\";\nimport * as axios from \"axios\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport { getUsers } from \"../../api/api\";\n\nvar UsersAPIComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UsersAPIComponent, _React$Component);\n\n  function UsersAPIComponent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UsersAPIComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UsersAPIComponent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onPageChanged = function (pageNumber) {\n      _this.props.toggleIsFetching(true);\n\n      _this.props.setCurrentPage(pageNumber);\n\n      axios.get(\"https://social-network.samuraijs.com/api/1.0/users?page=\".concat(pageNumber, \"&count=\").concat(_this.props.pageSize), {\n        withCredentials: true\n      }).then(function (response) {\n        _this.props.toggleIsFetching(false);\n\n        _this.props.setUsers(response.data.items);\n      });\n    };\n\n    _this.onNumberChange = function (e) {\n      var number = e.target.value;\n\n      _this.props.onNumberChange(number);\n    };\n\n    _this.searchNumber = function () {\n      _this.props.searchNumber();\n\n      _this.props.toggleIsFetching(true);\n\n      axios.get(\"https://social-network.samuraijs.com/api/1.0/users?page=\".concat(_this.props.numberChange, \"&count=\").concat(_this.props.pageSize), {\n        withCredentials: true\n      }).then(function (response) {\n        _this.props.toggleIsFetching(false);\n\n        _this.props.setUsers(response.data.items);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(UsersAPIComponent, [{\n    key: \"componentDidMount\",\n\n    /*constructor(props) {\r\n        super(props);\r\n        }\r\n    }*/\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.props.toggleIsFetching(true);\n      getUsers();\n\n      if (this.props.users.length == 0) {\n        axios.get(\"https://social-network.samuraijs.com/api/1.0/users?page=\".concat(this.props.currentPage, \"&count=\").concat(this.props.pageSize), {\n          withCredentials: true\n        }).then(function (response) {\n          _this2.props.toggleIsFetching(false);\n\n          _this2.props.setUsers(response.data.items);\n\n          _this2.props.setTotalUsersCount(response.data.totalCount);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, this.props.isFetching ? React.createElement(Preloader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }) : null, React.createElement(Users, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        onPageChanged: this.onPageChanged,\n        searchNumber: this.searchNumber,\n        onNumberChange: this.onNumberChange,\n        numberChange: this.props.numberChange,\n        users: this.props.users,\n        unFollow: this.props.unFollow,\n        follow: this.props.follow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return UsersAPIComponent;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    totalUsersCount: state.usersPage.totalUsersCount,\n    pageSize: state.usersPage.pageSize,\n    users: state.usersPage.users,\n    currentPage: state.usersPage.currentPage,\n    numberChange: state.usersPage.numberChange,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\nvar UsersContainer = connect(mapStateToProps, {\n  follow: follow,\n  unFollow: unFollow,\n  setUsers: setUsers,\n  setCurrentPage: setCurrentPage,\n  setTotalUsersCount: setTotalUsersCount,\n  onNumberChange: onNumberChange,\n  searchNumber: searchNumber,\n  toggleIsFetching: toggleIsFetching\n})(UsersAPIComponent);\nexport default UsersContainer;","map":{"version":3,"sources":["D:\\react-way-of-samurai\\src\\components\\Users\\UsersContainer.jsx"],"names":["React","connect","follow","setUsers","unFollow","setCurrentPage","setTotalUsersCount","onNumberChange","searchNumber","toggleIsFetching","axios","Users","Preloader","getUsers","UsersAPIComponent","onPageChanged","pageNumber","props","get","pageSize","withCredentials","then","response","data","items","e","number","target","value","numberChange","users","length","currentPage","totalCount","isFetching","totalUsersCount","Component","mapStateToProps","state","usersPage","UsersContainer"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    setUsers,\r\n    unFollow,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    onNumberChange,\r\n    searchNumber,\r\n    toggleIsFetching\r\n} from \"../../redux/usersReducer\";\r\nimport * as axios from \"axios\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {getUsers} from \"../../api/api\";\r\n\r\nclass UsersAPIComponent extends React.Component {\r\n    /*constructor(props) {\r\n        super(props);\r\n        }\r\n    }*/\r\n    componentDidMount() {\r\n        this.props.toggleIsFetching(true);\r\n        getUsers()\r\n        if (this.props.users.length == 0) {\r\n            axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`,{withCredentials:true})\r\n                .then(response => {\r\n                this.props.toggleIsFetching(false);\r\n                this.props.setUsers(response.data.items);\r\n                this.props.setTotalUsersCount(response.data.totalCount);\r\n            });\r\n        }\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.toggleIsFetching(true);\r\n        this.props.setCurrentPage(pageNumber);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`,{withCredentials:true}).then(response => {\r\n            this.props.toggleIsFetching(false);\r\n            this.props.setUsers(response.data.items);\r\n        });\r\n    }\r\n\r\n    onNumberChange = (e) => {\r\n        let number = e.target.value;\r\n        this.props.onNumberChange(number);\r\n    };\r\n    searchNumber = () => {\r\n        this.props.searchNumber();\r\n        this.props.toggleIsFetching(true);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.numberChange}&count=${this.props.pageSize}`,{withCredentials:true}).then(response => {\r\n            this.props.toggleIsFetching(false);\r\n            this.props.setUsers(response.data.items);\r\n        });\r\n    };\r\n\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/>:null}\r\n            <Users\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                searchNumber={this.searchNumber}\r\n                onNumberChange={this.onNumberChange}\r\n                numberChange={this.props.numberChange}\r\n                users={this.props.users}\r\n                unFollow={this.props.unFollow}\r\n                follow={this.props.follow}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        pageSize: state.usersPage.pageSize,\r\n        users: state.usersPage.users,\r\n        currentPage: state.usersPage.currentPage,\r\n        numberChange: state.usersPage.numberChange,\r\n        isFetching: state.usersPage.isFetching,\r\n    }\r\n}\r\n\r\nconst UsersContainer = connect(mapStateToProps, {follow, unFollow, setUsers, setCurrentPage, setTotalUsersCount,\r\nonNumberChange, searchNumber, toggleIsFetching,})(UsersAPIComponent);\r\n\r\nexport default UsersContainer;"]},"metadata":{},"sourceType":"module"}