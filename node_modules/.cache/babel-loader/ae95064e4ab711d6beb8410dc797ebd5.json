{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-way-of-samurai\\\\src\\\\components\\\\common\\\\FormsControls\\\\FormsControls.tsx\";\nimport React from \"react\";\nimport styles from \"./FormsControls.module.css\";\nimport { Field } from \"redux-form\";\n\nconst FormControl = ({\n  meta: {\n    touched,\n    error\n  },\n  children\n}) => {\n  const hasError = touched && error;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.formControl + \" \" + (hasError ? styles.error : \"\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, children), hasError && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 26\n    }\n  }, error));\n};\n\nexport const Textarea = props => {\n  //const {input, meta, child, ...restProps} = props;\n  const {\n    input,\n    meta,\n    ...restProps\n  } = props;\n  return /*#__PURE__*/React.createElement(FormControl, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", Object.assign({}, input, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 36\n    }\n  })));\n};\nexport const Input = props => {\n  //const {input, meta, child, ...restProps} = props;\n  const {\n    input,\n    meta,\n    ...restProps\n  } = props;\n  return /*#__PURE__*/React.createElement(FormControl, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, input, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 36\n    }\n  })));\n};\nexport function createField(placeholder, name, validators, component, props = {}, text = \"\") {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Field, Object.assign({\n    placeholder: placeholder,\n    name: name,\n    validate: validators,\n    component: component\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  })), \" \", text);\n}","map":{"version":3,"sources":["D:/react-way-of-samurai/src/components/common/FormsControls/FormsControls.tsx"],"names":["React","styles","Field","FormControl","meta","touched","error","children","hasError","formControl","Textarea","props","input","restProps","Input","createField","placeholder","name","validators","component","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AAEA,SAAQC,KAAR,QAAuC,YAAvC;;AAQA,MAAMC,WAA2C,GAAG,CAAC;AAACC,EAAAA,IAAI,EAAE;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,GAAP;AAAyBC,EAAAA;AAAzB,CAAD,KAAwC;AACxF,QAAMC,QAAQ,GAAGH,OAAO,IAAIC,KAA5B;AACA,sBACI;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACQ,WAAP,GAAqB,GAArB,IAA4BD,QAAQ,GAAGP,MAAM,CAACK,KAAV,GAAkB,EAAtD,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,QADL,CADJ,EAIKC,QAAQ,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOF,KAAP,CAJjB,CADJ;AAQH,CAVD;;AAYA,OAAO,MAAMI,QAAqC,GAAIC,KAAD,IAAW;AAC5D;AACA,QAAM;AAACC,IAAAA,KAAD;AAAQR,IAAAA,IAAR;AAAc,OAAGS;AAAjB,MAA8BF,KAApC;AACA,sBAAO,oBAAC,WAAD,oBAAiBA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAwB,kDAAcC,KAAd,EAAyBC,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAxB,CAAP;AACH,CAJM;AAMP,OAAO,MAAMC,KAAkC,GAAIH,KAAD,IAAW;AACzD;AACA,QAAM;AAACC,IAAAA,KAAD;AAAQR,IAAAA,IAAR;AAAc,OAAGS;AAAjB,MAA8BF,KAApC;AACA,sBAAO,oBAAC,WAAD,oBAAiBA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAwB,+CAAWC,KAAX,EAAsBC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAxB,CAAP;AACH,CAJM;AAMP,OAAO,SAASE,WAAT,CAAkDC,WAAlD,EACqBC,IADrB,EAEqBC,UAFrB,EAGqBC,SAHrB,EAIqBR,KAAK,GAAG,EAJ7B,EAIiCS,IAAI,GAAG,EAJxC,EAI4C;AAC/C,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAEJ,WAApB;AAAiC,IAAA,IAAI,EAAEC,IAAvC;AACO,IAAA,QAAQ,EAAEC,UADjB;AAEO,IAAA,SAAS,EAAEC;AAFlB,KAGWR,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADG,OAKCS,IALD,CAAP;AAOH","sourcesContent":["import React from \"react\"\r\nimport styles from \"./FormsControls.module.css\"\r\nimport {FieldValidatorType} from \"../../../utils/validators/validators\"\r\nimport {Field, WrappedFieldProps} from \"redux-form\"\r\nimport {WrappedFieldMetaProps} from 'redux-form/lib/Field'\r\nimport {LoginFormValuesType} from '../../Login/LoginPage';\r\n\r\ntype FormControlPropsType = {\r\n    meta: WrappedFieldMetaProps\r\n}\r\n\r\nconst FormControl: React.FC<FormControlPropsType> = ({meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea: React.FC<WrappedFieldProps> = (props) => {\r\n    //const {input, meta, child, ...restProps} = props;\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\r\n    //const {input, meta, child, ...restProps} = props;\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport function createField<FormKeysType extends string>(placeholder: string | undefined,\r\n                            name: FormKeysType,\r\n                            validators: Array<FieldValidatorType>,\r\n                            component: React.FC<WrappedFieldProps>,\r\n                            props = {}, text = \"\") {\r\n    return <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n}\r\n\r\nexport type GetStringKeys<T> = Extract<keyof T, string>\r\n"]},"metadata":{},"sourceType":"module"}