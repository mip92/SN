{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-way-of-samurai\\\\src\\\\components\\\\Dialogs\\\\Dialogs.jsx\";\nimport React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\n/*let dialogs = [\r\n    {id: 1, name: 'Dimych'},\r\n    {id: 2, name: 'Andrey'},\r\n    {id: 3, name: 'Sveta'},\r\n    {id: 4, name: 'Sasha'},\r\n    {id: 5, name: 'Viktor'},\r\n    {id: 6, name: 'Valera'}\r\n]*/\n\nvar messages = [{\n  id: 1,\n  message: 'Hi'\n}, {\n  id: 2,\n  message: 'How is your it-kamasutra?'\n}, {\n  id: 3,\n  message: 'Yo'\n}];\nvar dialogElements = dialogs.map(function (d) {\n  return React.createElement(DialogItem, {\n    name: d.name,\n    id: d.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  });\n});\nvar messageElements = messages.map(function (m) {\n  return React.createElement(Message, {\n    message: m.message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  });\n});\n\nvar Dialogs = function Dialogs(props) {\n  return React.createElement(\"div\", {\n    className: s.dialogs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: s.dialogsItems,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, dialogElements), React.createElement(\"div\", {\n    className: s.messages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, messageElements));\n};\n\nexport default Dialogs;","map":{"version":3,"sources":["D:\\react-way-of-samurai\\src\\components\\Dialogs\\Dialogs.jsx"],"names":["React","s","DialogItem","Message","messages","id","message","dialogElements","dialogs","map","d","name","messageElements","m","Dialogs","props","dialogsItems"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEA;;;;;;;;;AAQA,IAAIC,QAAQ,GAAG,CACX;AAACC,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,OAAO,EAAE;AAAjB,CADW,EAEX;AAACD,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,OAAO,EAAE;AAAjB,CAFW,EAGX;AAACD,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,OAAO,EAAE;AAAjB,CAHW,CAAf;AAKA,IAAIC,cAAc,GAAGC,OAAO,CAACC,GAAR,CAAY,UAACC,CAAD;AAAA,SAAO,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEA,CAAC,CAACC,IAApB;AAA0B,IAAA,EAAE,EAAED,CAAC,CAACL,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAAA,CAAZ,CAArB;AACA,IAAIO,eAAe,GAAGR,QAAQ,CAACK,GAAT,CAAa,UAACI,CAAD;AAAA,SAAO,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,CAAC,CAACP,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAAA,CAAb,CAAtB;;AAEA,IAAMQ,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAW;AACvB,SACI;AAAK,IAAA,SAAS,EAAEd,CAAC,CAACO,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAEP,CAAC,CAACe,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,cADL,CADJ,EAII;AAAK,IAAA,SAAS,EAAEN,CAAC,CAACG,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKQ,eADL,CAJJ,CADJ;AAUH,CAXD;;AAaA,eAAeE,OAAf","sourcesContent":["import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\n\r\n/*let dialogs = [\r\n    {id: 1, name: 'Dimych'},\r\n    {id: 2, name: 'Andrey'},\r\n    {id: 3, name: 'Sveta'},\r\n    {id: 4, name: 'Sasha'},\r\n    {id: 5, name: 'Viktor'},\r\n    {id: 6, name: 'Valera'}\r\n]*/\r\nlet messages = [\r\n    {id: 1, message: 'Hi'},\r\n    {id: 2, message: 'How is your it-kamasutra?'},\r\n    {id: 3, message: 'Yo'},\r\n]\r\nlet dialogElements = dialogs.map((d) => <DialogItem name={d.name} id={d.id}/>)\r\nlet messageElements = messages.map((m) => <Message message={m.message}/>)\r\n\r\nconst Dialogs = (props) => {\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messageElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;"]},"metadata":{},"sourceType":"module"}