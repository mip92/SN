{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\react-way-of-samurai\\\\src\\\\components\\\\common\\\\Paginator\\\\Paginator.js\";\n\nimport s from \"../../Users/Users.module.css\";\nimport React from \"react\";\nexport var Paginator = function Paginator(props) {\n  var pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\n  var pages = [];\n\n  for (var i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n  /*\r\n  \r\n      let mafs = () => {\r\n          for (let i = 1; i < pages.length; i++) {\r\n              if (props.currentPage == 1) return <div>\r\n              <span className={s.selectedPage} onClick={() => {\r\n                  props.onPageChanged(i);\r\n              }}> {i} </span>\r\n                  <span className={props.currentPage + 1 === i && s.selectedPage} onClick={() => {\r\n                      props.onPageChanged(i + 1);\r\n                  }}> {i + 1} </span>\r\n                  <span>...</span>\r\n                  <span className={pages.length === i && s.selectedPage} onClick={() => {\r\n                      props.onPageChanged(pages.length);\r\n                  }}>{pages.length}\r\n              </span>\r\n              </div>\r\n              if (props.currentPage == i) return <div><span className={props.currentPage - 1 === i && s.selectedPage}\r\n                                                            onClick={() => {\r\n                                                                props.onPageChanged(i - 1);\r\n                                                            }}> {i - 1} </span>\r\n                  <span className={s.selectedPage} onClick={() => {\r\n                      props.onPageChanged(i);\r\n                  }}> {i} </span>\r\n                  <span className={props.currentPage + 1 === i && s.selectedPage} onClick={() => {\r\n                      props.onPageChanged(i + 1);\r\n                  }}> {i + 1} </span>\r\n                  <span>...</span>\r\n                  <span className={pages.length === i && s.selectedPage} onClick={() => {\r\n                      props.onPageChanged(pages.length);\r\n                  }}>{pages.length}\r\n              </span></div>\r\n  \r\n              if (props.currentPage == pages.length-1) return <div><span onClick={() => {\r\n                  props.onPageChanged(1);\r\n              }}> {1} </span>\r\n                  <span>...</span>\r\n                  <span onClick={() => {\r\n                      props.onPageChanged(pages.length - 3);\r\n                  }}> {pages.length - 2} </span>\r\n                  <span className={s.selectedPage} onClick={() => {\r\n                      props.onPageChanged(pages.length - 2);\r\n                  }}> {pages.length - 1} </span>\r\n                  <span onClick={() => {\r\n                      props.onPageChanged(pages.length);\r\n                  }}> {pages.length}\r\n              </span></div>\r\n  \r\n              if (props.currentPage == pages.length) return <div><span onClick={() => {\r\n                  props.onPageChanged(1);\r\n              }}> {1} </span>\r\n                  <span>...</span>\r\n                  <span onClick={() => {\r\n                      props.onPageChanged(pages.length - 1);\r\n                  }}> {pages.length - 1} </span>\r\n                  <span className={s.selectedPage} onClick={() => {\r\n                      props.onPageChanged(pages.length);\r\n                  }}> {pages.length}\r\n              </span></div>\r\n          }\r\n      }*/\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"1\");\n};","map":{"version":3,"sources":["D:/react-way-of-samurai/src/components/common/Paginator/Paginator.js"],"names":["s","React","Paginator","props","pagesCount","Math","ceil","totalUsersCount","pageSize","pages","i","push"],"mappings":";;;AAAA,OAAOA,CAAP,MAAc,8BAAd;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,IAAIC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAC9B,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUH,KAAK,CAACI,eAAN,GAAwBJ,KAAK,CAACK,QAAxC,CAAjB;AACA,MAAIC,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIN,UAArB,EAAiCM,CAAC,EAAlC,EAAsC;AAClCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ;AAMH,CAzEM","sourcesContent":["import s from \"../../Users/Users.module.css\";\r\nimport React from \"react\";\r\n\r\n\r\nexport let Paginator = (props) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n/*\r\n\r\n    let mafs = () => {\r\n        for (let i = 1; i < pages.length; i++) {\r\n            if (props.currentPage == 1) return <div>\r\n            <span className={s.selectedPage} onClick={() => {\r\n                props.onPageChanged(i);\r\n            }}> {i} </span>\r\n                <span className={props.currentPage + 1 === i && s.selectedPage} onClick={() => {\r\n                    props.onPageChanged(i + 1);\r\n                }}> {i + 1} </span>\r\n                <span>...</span>\r\n                <span className={pages.length === i && s.selectedPage} onClick={() => {\r\n                    props.onPageChanged(pages.length);\r\n                }}>{pages.length}\r\n            </span>\r\n            </div>\r\n            if (props.currentPage == i) return <div><span className={props.currentPage - 1 === i && s.selectedPage}\r\n                                                          onClick={() => {\r\n                                                              props.onPageChanged(i - 1);\r\n                                                          }}> {i - 1} </span>\r\n                <span className={s.selectedPage} onClick={() => {\r\n                    props.onPageChanged(i);\r\n                }}> {i} </span>\r\n                <span className={props.currentPage + 1 === i && s.selectedPage} onClick={() => {\r\n                    props.onPageChanged(i + 1);\r\n                }}> {i + 1} </span>\r\n                <span>...</span>\r\n                <span className={pages.length === i && s.selectedPage} onClick={() => {\r\n                    props.onPageChanged(pages.length);\r\n                }}>{pages.length}\r\n            </span></div>\r\n\r\n            if (props.currentPage == pages.length-1) return <div><span onClick={() => {\r\n                props.onPageChanged(1);\r\n            }}> {1} </span>\r\n                <span>...</span>\r\n                <span onClick={() => {\r\n                    props.onPageChanged(pages.length - 3);\r\n                }}> {pages.length - 2} </span>\r\n                <span className={s.selectedPage} onClick={() => {\r\n                    props.onPageChanged(pages.length - 2);\r\n                }}> {pages.length - 1} </span>\r\n                <span onClick={() => {\r\n                    props.onPageChanged(pages.length);\r\n                }}> {pages.length}\r\n            </span></div>\r\n\r\n            if (props.currentPage == pages.length) return <div><span onClick={() => {\r\n                props.onPageChanged(1);\r\n            }}> {1} </span>\r\n                <span>...</span>\r\n                <span onClick={() => {\r\n                    props.onPageChanged(pages.length - 1);\r\n                }}> {pages.length - 1} </span>\r\n                <span className={s.selectedPage} onClick={() => {\r\n                    props.onPageChanged(pages.length);\r\n                }}> {pages.length}\r\n            </span></div>\r\n        }\r\n    }*/\r\n    return (\r\n        <div>\r\n            1\r\n        </div>\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}