{"ast":null,"code":"import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\nimport profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport sidebarReducer from \"./sidebar-reducer\";\nimport usersReducer from \"./users-reducer\";\nimport authReducer from \"./auth-reducer\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { reducer as formReducer } from 'redux-form';\nimport appReducer from \"./app-reducer\";\nlet rootReducer = combineReducers({\n  profilePage: profileReducer,\n  dialogsPage: dialogsReducer,\n  sidebar: sidebarReducer,\n  usersPage: usersReducer,\n  auth: authReducer,\n  form: formReducer,\n  app: appReducer\n});\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware))); // @ts-ignore\n\nwindow.__store__ = store;\nexport default store;","map":{"version":3,"sources":["D:/react-way-of-samurai/src/redux/redux-store.ts"],"names":["applyMiddleware","combineReducers","compose","createStore","profileReducer","dialogsReducer","sidebarReducer","usersReducer","authReducer","thunkMiddleware","reducer","formReducer","appReducer","rootReducer","profilePage","dialogsPage","sidebar","usersPage","auth","form","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","__store__"],"mappings":"AAAA,SAAgBA,eAAhB,EAAiCC,eAAjC,EAAkDC,OAAlD,EAA2DC,WAA3D,QAA6E,OAA7E;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,eAAP,MAA2C,aAA3C;AACA,SAAQC,OAAO,IAAIC,WAAnB,QAAqC,YAArC;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,IAAIC,WAAW,GAAGZ,eAAe,CAAC;AAC9Ba,EAAAA,WAAW,EAAEV,cADiB;AAE9BW,EAAAA,WAAW,EAAEV,cAFiB;AAG9BW,EAAAA,OAAO,EAAEV,cAHqB;AAI9BW,EAAAA,SAAS,EAAEV,YAJmB;AAK9BW,EAAAA,IAAI,EAAEV,WALwB;AAM9BW,EAAAA,IAAI,EAAER,WANwB;AAO9BS,EAAAA,GAAG,EAAER;AAPyB,CAAD,CAAjC;AAkBA;AACA,MAAMS,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CrB,OAAxE;AAEA,MAAMsB,KAAK,GAAGrB,WAAW,CAACU,WAAD,EAAcQ,gBAAgB,CAACrB,eAAe,CAACS,eAAD,CAAhB,CAA9B,CAAzB,C,CACA;;AACAa,MAAM,CAACG,SAAP,GAAmBD,KAAnB;AAEA,eAAeA,KAAf","sourcesContent":["import {Action, applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware, {ThunkAction} from \"redux-thunk\";\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\n\r\ntype RootReducerType = typeof rootReducer; // (globalstate: AppStateType) => AppStateType\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\nexport type InferActionsTypes<T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never\r\n\r\nexport type BaseThunkType<A extends Action = Action, R = Promise<void>> = ThunkAction<R, AppStateType, unknown, A>\r\n\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n// @ts-ignore\r\nwindow.__store__ = store\r\n\r\nexport default store\r\n"]},"metadata":{},"sourceType":"module"}